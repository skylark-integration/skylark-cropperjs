{"version":3,"sources":["events.js"],"names":["define","a","b","[object Object]","element","options","cropper","this","isFunction","cropstart","addListener","EVENT_CROP_START","cropmove","EVENT_CROP_MOVE","cropend","EVENT_CROP_END","crop","EVENT_CROP","zoom","EVENT_ZOOM","EVENT_POINTER_DOWN","onCropStart","cropStart","bind","zoomable","zoomOnWheel","EVENT_WHEEL","onWheel","wheel","passive","capture","toggleDragModeOnDblclick","EVENT_DBLCLICK","onDblclick","dblclick","ownerDocument","EVENT_POINTER_MOVE","onCropMove","cropMove","EVENT_POINTER_UP","onCropEnd","cropEnd","responsive","window","EVENT_RESIZE","onResize","resize","removeListener"],"mappings":";;;;;;;AAAAA,QACI,cACA,eACD,SAAUC,EAAGC,GACZ,aACA,OACIC,OACI,MAAMC,QAACA,EAAOC,QAAEA,EAAOC,QAAEA,GAAWC,KAChCL,EAAEM,WAAWH,EAAQI,YACrBP,EAAEQ,YAAYN,EAASH,EAAEU,iBAAkBN,EAAQI,WAEnDP,EAAEM,WAAWH,EAAQO,WACrBV,EAAEQ,YAAYN,EAASH,EAAEY,gBAAiBR,EAAQO,UAElDV,EAAEM,WAAWH,EAAQS,UACrBZ,EAAEQ,YAAYN,EAASH,EAAEc,eAAgBV,EAAQS,SAEjDZ,EAAEM,WAAWH,EAAQW,OACrBd,EAAEQ,YAAYN,EAASH,EAAEgB,WAAYZ,EAAQW,MAE7Cd,EAAEM,WAAWH,EAAQa,OACrBhB,EAAEQ,YAAYN,EAASH,EAAEkB,WAAYd,EAAQa,MAEjDhB,EAAEQ,YAAYJ,EAASL,EAAEmB,mBAAoBb,KAAKc,YAAcd,KAAKe,UAAUC,KAAKhB,OAChFF,EAAQmB,UAAYnB,EAAQoB,aAC5BvB,EAAEQ,YAAYJ,EAASL,EAAEyB,YAAanB,KAAKoB,QAAUpB,KAAKqB,MAAML,KAAKhB,OACjEsB,SAAS,EACTC,SAAS,IAGbzB,EAAQ0B,0BACR7B,EAAEQ,YAAYJ,EAASL,EAAE+B,eAAgBzB,KAAK0B,WAAa1B,KAAK2B,SAASX,KAAKhB,OAElFL,EAAEQ,YAAYN,EAAQ+B,cAAelC,EAAEmC,mBAAoB7B,KAAK8B,WAAa9B,KAAK+B,SAASf,KAAKhB,OAChGL,EAAEQ,YAAYN,EAAQ+B,cAAelC,EAAEsC,iBAAkBhC,KAAKiC,UAAYjC,KAAKkC,QAAQlB,KAAKhB,OACxFF,EAAQqC,YACRxC,EAAEQ,YAAYiC,OAAQ1C,EAAE2C,aAAcrC,KAAKsC,SAAWtC,KAAKuC,OAAOvB,KAAKhB,QAG/EJ,SACI,MAAMC,QAACA,EAAOC,QAAEA,EAAOC,QAAEA,GAAWC,KAChCL,EAAEM,WAAWH,EAAQI,YACrBP,EAAE6C,eAAe3C,EAASH,EAAEU,iBAAkBN,EAAQI,WAEtDP,EAAEM,WAAWH,EAAQO,WACrBV,EAAE6C,eAAe3C,EAASH,EAAEY,gBAAiBR,EAAQO,UAErDV,EAAEM,WAAWH,EAAQS,UACrBZ,EAAE6C,eAAe3C,EAASH,EAAEc,eAAgBV,EAAQS,SAEpDZ,EAAEM,WAAWH,EAAQW,OACrBd,EAAE6C,eAAe3C,EAASH,EAAEgB,WAAYZ,EAAQW,MAEhDd,EAAEM,WAAWH,EAAQa,OACrBhB,EAAE6C,eAAe3C,EAASH,EAAEkB,WAAYd,EAAQa,MAEpDhB,EAAE6C,eAAezC,EAASL,EAAEmB,mBAAoBb,KAAKc,aACjDhB,EAAQmB,UAAYnB,EAAQoB,aAC5BvB,EAAE6C,eAAezC,EAASL,EAAEyB,YAAanB,KAAKoB,SAC1CE,SAAS,EACTC,SAAS,IAGbzB,EAAQ0B,0BACR7B,EAAE6C,eAAezC,EAASL,EAAE+B,eAAgBzB,KAAK0B,YAErD/B,EAAE6C,eAAe3C,EAAQ+B,cAAelC,EAAEmC,mBAAoB7B,KAAK8B,YACnEnC,EAAE6C,eAAe3C,EAAQ+B,cAAelC,EAAEsC,iBAAkBhC,KAAKiC,WAC7DnC,EAAQqC,YACRxC,EAAE6C,eAAeJ,OAAQ1C,EAAE2C,aAAcrC,KAAKsC","file":"../events.js","sourcesContent":["define([\n    './constants',\n    './utilities'\n], function (a, b) {\n    'use strict';\n    return {\n        bind() {\n            const {element, options, cropper} = this;\n            if (b.isFunction(options.cropstart)) {\n                b.addListener(element, a.EVENT_CROP_START, options.cropstart);\n            }\n            if (b.isFunction(options.cropmove)) {\n                b.addListener(element, a.EVENT_CROP_MOVE, options.cropmove);\n            }\n            if (b.isFunction(options.cropend)) {\n                b.addListener(element, a.EVENT_CROP_END, options.cropend);\n            }\n            if (b.isFunction(options.crop)) {\n                b.addListener(element, a.EVENT_CROP, options.crop);\n            }\n            if (b.isFunction(options.zoom)) {\n                b.addListener(element, a.EVENT_ZOOM, options.zoom);\n            }\n            b.addListener(cropper, a.EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n            if (options.zoomable && options.zoomOnWheel) {\n                b.addListener(cropper, a.EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n                    passive: false,\n                    capture: true\n                });\n            }\n            if (options.toggleDragModeOnDblclick) {\n                b.addListener(cropper, a.EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n            }\n            b.addListener(element.ownerDocument, a.EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n            b.addListener(element.ownerDocument, a.EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n            if (options.responsive) {\n                b.addListener(window, a.EVENT_RESIZE, this.onResize = this.resize.bind(this));\n            }\n        },\n        unbind() {\n            const {element, options, cropper} = this;\n            if (b.isFunction(options.cropstart)) {\n                b.removeListener(element, a.EVENT_CROP_START, options.cropstart);\n            }\n            if (b.isFunction(options.cropmove)) {\n                b.removeListener(element, a.EVENT_CROP_MOVE, options.cropmove);\n            }\n            if (b.isFunction(options.cropend)) {\n                b.removeListener(element, a.EVENT_CROP_END, options.cropend);\n            }\n            if (b.isFunction(options.crop)) {\n                b.removeListener(element, a.EVENT_CROP, options.crop);\n            }\n            if (b.isFunction(options.zoom)) {\n                b.removeListener(element, a.EVENT_ZOOM, options.zoom);\n            }\n            b.removeListener(cropper, a.EVENT_POINTER_DOWN, this.onCropStart);\n            if (options.zoomable && options.zoomOnWheel) {\n                b.removeListener(cropper, a.EVENT_WHEEL, this.onWheel, {\n                    passive: false,\n                    capture: true\n                });\n            }\n            if (options.toggleDragModeOnDblclick) {\n                b.removeListener(cropper, a.EVENT_DBLCLICK, this.onDblclick);\n            }\n            b.removeListener(element.ownerDocument, a.EVENT_POINTER_MOVE, this.onCropMove);\n            b.removeListener(element.ownerDocument, a.EVENT_POINTER_UP, this.onCropEnd);\n            if (options.responsive) {\n                b.removeListener(window, a.EVENT_RESIZE, this.onResize);\n            }\n        }\n    };\n});"]}