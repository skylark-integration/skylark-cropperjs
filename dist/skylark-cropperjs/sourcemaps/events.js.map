{"version":3,"sources":["events.js"],"names":["define","constants","utilities","[object Object]","element","options","cropper","this","isFunction","cropstart","addListener","EVENT_CROP_START","cropmove","EVENT_CROP_MOVE","cropend","EVENT_CROP_END","crop","EVENT_CROP","zoom","EVENT_ZOOM","EVENT_POINTER_DOWN","onCropStart","cropStart","bind","zoomable","zoomOnWheel","EVENT_WHEEL","onWheel","wheel","passive","capture","toggleDragModeOnDblclick","EVENT_DBLCLICK","onDblclick","dblclick","ownerDocument","EVENT_POINTER_MOVE","onCropMove","cropMove","EVENT_POINTER_UP","onCropEnd","cropEnd","responsive","window","EVENT_RESIZE","onResize","resize","removeListener"],"mappings":";;;;;;;AAAAA,QACI,cACA,eACD,SAAUC,EAAWC,GACpB,aACA,OACIC,OACI,MAAMC,QAACA,EAAOC,QAAEA,EAAOC,QAAEA,GAAWC,KAChCL,EAAUM,WAAWH,EAAQI,YAC7BP,EAAUQ,YAAYN,EAASH,EAAUU,iBAAkBN,EAAQI,WAEnEP,EAAUM,WAAWH,EAAQO,WAC7BV,EAAUQ,YAAYN,EAASH,EAAUY,gBAAiBR,EAAQO,UAElEV,EAAUM,WAAWH,EAAQS,UAC7BZ,EAAUQ,YAAYN,EAASH,EAAUc,eAAgBV,EAAQS,SAEjEZ,EAAUM,WAAWH,EAAQW,OAC7Bd,EAAUQ,YAAYN,EAASH,EAAUgB,WAAYZ,EAAQW,MAE7Dd,EAAUM,WAAWH,EAAQa,OAC7BhB,EAAUQ,YAAYN,EAASH,EAAUkB,WAAYd,EAAQa,MAEjEhB,EAAUQ,YAAYJ,EAASL,EAAUmB,mBAAoBb,KAAKc,YAAcd,KAAKe,UAAUC,KAAKhB,OAChGF,EAAQmB,UAAYnB,EAAQoB,aAC5BvB,EAAUQ,YAAYJ,EAASL,EAAUyB,YAAanB,KAAKoB,QAAUpB,KAAKqB,MAAML,KAAKhB,OACjFsB,SAAS,EACTC,SAAS,IAGbzB,EAAQ0B,0BACR7B,EAAUQ,YAAYJ,EAASL,EAAU+B,eAAgBzB,KAAK0B,WAAa1B,KAAK2B,SAASX,KAAKhB,OAElGL,EAAUQ,YAAYN,EAAQ+B,cAAelC,EAAUmC,mBAAoB7B,KAAK8B,WAAa9B,KAAK+B,SAASf,KAAKhB,OAChHL,EAAUQ,YAAYN,EAAQ+B,cAAelC,EAAUsC,iBAAkBhC,KAAKiC,UAAYjC,KAAKkC,QAAQlB,KAAKhB,OACxGF,EAAQqC,YACRxC,EAAUQ,YAAYiC,OAAQ1C,EAAU2C,aAAcrC,KAAKsC,SAAWtC,KAAKuC,OAAOvB,KAAKhB,QAG/FJ,SACI,MAAMC,QAACA,EAAOC,QAAEA,EAAOC,QAAEA,GAAWC,KAChCL,EAAUM,WAAWH,EAAQI,YAC7BP,EAAU6C,eAAe3C,EAASH,EAAUU,iBAAkBN,EAAQI,WAEtEP,EAAUM,WAAWH,EAAQO,WAC7BV,EAAU6C,eAAe3C,EAASH,EAAUY,gBAAiBR,EAAQO,UAErEV,EAAUM,WAAWH,EAAQS,UAC7BZ,EAAU6C,eAAe3C,EAASH,EAAUc,eAAgBV,EAAQS,SAEpEZ,EAAUM,WAAWH,EAAQW,OAC7Bd,EAAU6C,eAAe3C,EAASH,EAAUgB,WAAYZ,EAAQW,MAEhEd,EAAUM,WAAWH,EAAQa,OAC7BhB,EAAU6C,eAAe3C,EAASH,EAAUkB,WAAYd,EAAQa,MAEpEhB,EAAU6C,eAAezC,EAASL,EAAUmB,mBAAoBb,KAAKc,aACjEhB,EAAQmB,UAAYnB,EAAQoB,aAC5BvB,EAAU6C,eAAezC,EAASL,EAAUyB,YAAanB,KAAKoB,SAC1DE,SAAS,EACTC,SAAS,IAGbzB,EAAQ0B,0BACR7B,EAAU6C,eAAezC,EAASL,EAAU+B,eAAgBzB,KAAK0B,YAErE/B,EAAU6C,eAAe3C,EAAQ+B,cAAelC,EAAUmC,mBAAoB7B,KAAK8B,YACnFnC,EAAU6C,eAAe3C,EAAQ+B,cAAelC,EAAUsC,iBAAkBhC,KAAKiC,WAC7EnC,EAAQqC,YACRxC,EAAU6C,eAAeJ,OAAQ1C,EAAU2C,aAAcrC,KAAKsC","file":"../events.js","sourcesContent":["define([\n    './constants',\n    './utilities'\n], function (constants, utilities) {\n    'use strict';\n    return {\n        bind() {\n            const {element, options, cropper} = this;\n            if (utilities.isFunction(options.cropstart)) {\n                utilities.addListener(element, constants.EVENT_CROP_START, options.cropstart);\n            }\n            if (utilities.isFunction(options.cropmove)) {\n                utilities.addListener(element, constants.EVENT_CROP_MOVE, options.cropmove);\n            }\n            if (utilities.isFunction(options.cropend)) {\n                utilities.addListener(element, constants.EVENT_CROP_END, options.cropend);\n            }\n            if (utilities.isFunction(options.crop)) {\n                utilities.addListener(element, constants.EVENT_CROP, options.crop);\n            }\n            if (utilities.isFunction(options.zoom)) {\n                utilities.addListener(element, constants.EVENT_ZOOM, options.zoom);\n            }\n            utilities.addListener(cropper, constants.EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n            if (options.zoomable && options.zoomOnWheel) {\n                utilities.addListener(cropper, constants.EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n                    passive: false,\n                    capture: true\n                });\n            }\n            if (options.toggleDragModeOnDblclick) {\n                utilities.addListener(cropper, constants.EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n            }\n            utilities.addListener(element.ownerDocument, constants.EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n            utilities.addListener(element.ownerDocument, constants.EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n            if (options.responsive) {\n                utilities.addListener(window, constants.EVENT_RESIZE, this.onResize = this.resize.bind(this));\n            }\n        },\n        unbind() {\n            const {element, options, cropper} = this;\n            if (utilities.isFunction(options.cropstart)) {\n                utilities.removeListener(element, constants.EVENT_CROP_START, options.cropstart);\n            }\n            if (utilities.isFunction(options.cropmove)) {\n                utilities.removeListener(element, constants.EVENT_CROP_MOVE, options.cropmove);\n            }\n            if (utilities.isFunction(options.cropend)) {\n                utilities.removeListener(element, constants.EVENT_CROP_END, options.cropend);\n            }\n            if (utilities.isFunction(options.crop)) {\n                utilities.removeListener(element, constants.EVENT_CROP, options.crop);\n            }\n            if (utilities.isFunction(options.zoom)) {\n                utilities.removeListener(element, constants.EVENT_ZOOM, options.zoom);\n            }\n            utilities.removeListener(cropper, constants.EVENT_POINTER_DOWN, this.onCropStart);\n            if (options.zoomable && options.zoomOnWheel) {\n                utilities.removeListener(cropper, constants.EVENT_WHEEL, this.onWheel, {\n                    passive: false,\n                    capture: true\n                });\n            }\n            if (options.toggleDragModeOnDblclick) {\n                utilities.removeListener(cropper, constants.EVENT_DBLCLICK, this.onDblclick);\n            }\n            utilities.removeListener(element.ownerDocument, constants.EVENT_POINTER_MOVE, this.onCropMove);\n            utilities.removeListener(element.ownerDocument, constants.EVENT_POINTER_UP, this.onCropEnd);\n            if (options.responsive) {\n                utilities.removeListener(window, constants.EVENT_RESIZE, this.onResize);\n            }\n        }\n    };\n});"]}