{"version":3,"sources":["Cropper.js"],"names":["define","skylark","DEFAULTS","TEMPLATE","render","preview","events","handlers","change","methods","a","b","AnotherCropper","WINDOW","Cropper","[object Object]","element","options","REGEXP_TAG_NAME","test","tagName","Error","this","assign","isPlainObject","cropped","disabled","pointers","ready","reloading","replaced","sized","sizing","init","toLowerCase","url","NAMESPACE","isImg","getAttribute","originalUrl","src","window","HTMLCanvasElement","toDataURL","load","imageData","rotatable","scalable","checkOrientation","ArrayBuffer","clone","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","read","dataURLToArrayBuffer","xhr","XMLHttpRequest","bind","onabort","onerror","ontimeout","onprogress","getResponseHeader","MIME_TYPE_JPEG","abort","onload","response","onloadend","checkCrossOrigin","isCrossOriginURL","crossOrigin","addTimestamp","open","responseType","withCredentials","send","arrayBuffer","orientation","resetAndGetOrientation","rotate","scaleX","scaleY","arrayBufferToDataURL","parseOrientation","crossOriginUrl","image","document","createElement","alt","start","stop","addClass","CLASS_HIDE","parentNode","insertBefore","nextSibling","isIOSWebKit","navigator","userAgent","done","naturalWidth","naturalHeight","aspectRatio","build","sizingImage","body","documentElement","width","height","removeChild","style","cssText","appendChild","container","template","innerHTML","cropper","querySelector","canvas","dragBox","cropBox","face","viewBox","CLASS_HIDDEN","removeClass","initPreview","initialAspectRatio","Math","max","NaN","viewMode","min","round","guides","getElementsByClassName","center","background","highlight","CLASS_INVISIBLE","cropBoxMovable","CLASS_MOVE","setData","DATA_ACTION","ACTION_ALL","cropBoxResizable","setDragMode","dragMode","autoCrop","crop","undefined","data","isFunction","addListener","EVENT_READY","once","dispatchEvent","unbind","resetPreview","unbuild","prototype","attach"],"mappings":"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","file":"../Cropper.js","sourcesContent":["define([\n    'skylark-langx/skylark',\n    './defaults',\n    './template',\n    './render',\n    './preview',\n    './events',\n    './handlers',\n    './change',\n    './methods',\n    './constants',\n    './utilities'\n], function (skylark, DEFAULTS, TEMPLATE, render, preview, events, handlers, change, methods, a, b) {\n    'use strict';\n    const AnotherCropper = a.WINDOW.Cropper;\n    class Cropper {\n        constructor(element, options = {}) {\n            if (!element || !a.REGEXP_TAG_NAME.test(element.tagName)) {\n                throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n            }\n            this.element = element;\n            this.options = b.assign({}, DEFAULTS, b.isPlainObject(options) && options);\n            this.cropped = false;\n            this.disabled = false;\n            this.pointers = {};\n            this.ready = false;\n            this.reloading = false;\n            this.replaced = false;\n            this.sized = false;\n            this.sizing = false;\n            this.init();\n        }\n        init() {\n            const {element} = this;\n            const tagName = element.tagName.toLowerCase();\n            let url;\n            if (element[a.NAMESPACE]) {\n                return;\n            }\n            element[a.NAMESPACE] = this;\n            if (tagName === 'img') {\n                this.isImg = true;\n                url = element.getAttribute('src') || '';\n                this.originalUrl = url;\n                if (!url) {\n                    return;\n                }\n                url = element.src;\n            } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n                url = element.toDataURL();\n            }\n            this.load(url);\n        }\n        load(url) {\n            if (!url) {\n                return;\n            }\n            this.url = url;\n            this.imageData = {};\n            const {element, options} = this;\n            if (!options.rotatable && !options.scalable) {\n                options.checkOrientation = false;\n            }\n            if (!options.checkOrientation || !window.ArrayBuffer) {\n                this.clone();\n                return;\n            }\n            if (a.REGEXP_DATA_URL.test(url)) {\n                if (a.REGEXP_DATA_URL_JPEG.test(url)) {\n                    this.read(b.dataURLToArrayBuffer(url));\n                } else {\n                    this.clone();\n                }\n                return;\n            }\n            const xhr = new XMLHttpRequest();\n            const clone = this.clone.bind(this);\n            this.reloading = true;\n            this.xhr = xhr;\n            xhr.onabort = clone;\n            xhr.onerror = clone;\n            xhr.ontimeout = clone;\n            xhr.onprogress = () => {\n                if (xhr.getResponseHeader('content-type') !== a.MIME_TYPE_JPEG) {\n                    xhr.abort();\n                }\n            };\n            xhr.onload = () => {\n                this.read(xhr.response);\n            };\n            xhr.onloadend = () => {\n                this.reloading = false;\n                this.xhr = null;\n            };\n            if (options.checkCrossOrigin && b.isCrossOriginURL(url) && element.crossOrigin) {\n                url = b.addTimestamp(url);\n            }\n            xhr.open('GET', url);\n            xhr.responseType = 'arraybuffer';\n            xhr.withCredentials = element.crossOrigin === 'use-credentials';\n            xhr.send();\n        }\n        read(arrayBuffer) {\n            const {options, imageData} = this;\n            const orientation = b.resetAndGetOrientation(arrayBuffer);\n            let rotate = 0;\n            let scaleX = 1;\n            let scaleY = 1;\n            if (orientation > 1) {\n                this.url = b.arrayBufferToDataURL(arrayBuffer, a.MIME_TYPE_JPEG);\n                ({rotate, scaleX, scaleY} = b.parseOrientation(orientation));\n            }\n            if (options.rotatable) {\n                imageData.rotate = rotate;\n            }\n            if (options.scalable) {\n                imageData.scaleX = scaleX;\n                imageData.scaleY = scaleY;\n            }\n            this.clone();\n        }\n        clone() {\n            const {element, url} = this;\n            let {crossOrigin} = element;\n            let crossOriginUrl = url;\n            if (this.options.checkCrossOrigin && b.isCrossOriginURL(url)) {\n                if (!crossOrigin) {\n                    crossOrigin = 'anonymous';\n                }\n                crossOriginUrl = b.addTimestamp(url);\n            }\n            this.crossOrigin = crossOrigin;\n            this.crossOriginUrl = crossOriginUrl;\n            const image = document.createElement('img');\n            if (crossOrigin) {\n                image.crossOrigin = crossOrigin;\n            }\n            image.src = crossOriginUrl || url;\n            image.alt = element.alt || 'The image to crop';\n            this.image = image;\n            image.onload = this.start.bind(this);\n            image.onerror = this.stop.bind(this);\n            b.addClass(image, a.CLASS_HIDE);\n            element.parentNode.insertBefore(image, element.nextSibling);\n        }\n        start() {\n            const {image} = this;\n            image.onload = null;\n            image.onerror = null;\n            this.sizing = true;\n            const isIOSWebKit = a.WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(a.WINDOW.navigator.userAgent);\n            const done = (naturalWidth, naturalHeight) => {\n                b.assign(this.imageData, {\n                    naturalWidth,\n                    naturalHeight,\n                    aspectRatio: naturalWidth / naturalHeight\n                });\n                this.sizing = false;\n                this.sized = true;\n                this.build();\n            };\n            if (image.naturalWidth && !isIOSWebKit) {\n                done(image.naturalWidth, image.naturalHeight);\n                return;\n            }\n            const sizingImage = document.createElement('img');\n            const body = document.body || document.documentElement;\n            this.sizingImage = sizingImage;\n            sizingImage.onload = () => {\n                done(sizingImage.width, sizingImage.height);\n                if (!isIOSWebKit) {\n                    body.removeChild(sizingImage);\n                }\n            };\n            sizingImage.src = image.src;\n            if (!isIOSWebKit) {\n                sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n                body.appendChild(sizingImage);\n            }\n        }\n        stop() {\n            const {image} = this;\n            image.onload = null;\n            image.onerror = null;\n            image.parentNode.removeChild(image);\n            this.image = null;\n        }\n        build() {\n            if (!this.sized || this.ready) {\n                return;\n            }\n            const {element, options, image} = this;\n            const container = element.parentNode;\n            const template = document.createElement('div');\n            template.innerHTML = TEMPLATE;\n            const cropper = template.querySelector(`.${ a.NAMESPACE }-container`);\n            const canvas = cropper.querySelector(`.${ a.NAMESPACE }-canvas`);\n            const dragBox = cropper.querySelector(`.${ a.NAMESPACE }-drag-box`);\n            const cropBox = cropper.querySelector(`.${ a.NAMESPACE }-crop-box`);\n            const face = cropBox.querySelector(`.${ a.NAMESPACE }-face`);\n            this.container = container;\n            this.cropper = cropper;\n            this.canvas = canvas;\n            this.dragBox = dragBox;\n            this.cropBox = cropBox;\n            this.viewBox = cropper.querySelector(`.${ a.NAMESPACE }-view-box`);\n            this.face = face;\n            canvas.appendChild(image);\n            b.addClass(element, a.CLASS_HIDDEN);\n            container.insertBefore(cropper, element.nextSibling);\n            if (!this.isImg) {\n                b.removeClass(image, a.CLASS_HIDE);\n            }\n            this.initPreview();\n            this.bind();\n            options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n            options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n            options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n            b.addClass(cropBox, a.CLASS_HIDDEN);\n            if (!options.guides) {\n                b.addClass(cropBox.getElementsByClassName(`${ a.NAMESPACE }-dashed`), a.CLASS_HIDDEN);\n            }\n            if (!options.center) {\n                b.addClass(cropBox.getElementsByClassName(`${ a.NAMESPACE }-center`), a.CLASS_HIDDEN);\n            }\n            if (options.background) {\n                b.addClass(cropper, `${ a.NAMESPACE }-bg`);\n            }\n            if (!options.highlight) {\n                b.addClass(face, a.CLASS_INVISIBLE);\n            }\n            if (options.cropBoxMovable) {\n                b.addClass(face, a.CLASS_MOVE);\n                b.setData(face, a.DATA_ACTION, a.ACTION_ALL);\n            }\n            if (!options.cropBoxResizable) {\n                b.addClass(cropBox.getElementsByClassName(`${ a.NAMESPACE }-line`), a.CLASS_HIDDEN);\n                b.addClass(cropBox.getElementsByClassName(`${ a.NAMESPACE }-point`), a.CLASS_HIDDEN);\n            }\n            this.render();\n            this.ready = true;\n            this.setDragMode(options.dragMode);\n            if (options.autoCrop) {\n                this.crop();\n            }\n            this.undefined(options.data);\n            if (b.isFunction(options.ready)) {\n                b.addListener(element, a.EVENT_READY, options.ready, { once: true });\n            }\n            b.dispatchEvent(element, a.EVENT_READY);\n        }\n        unbuild() {\n            if (!this.ready) {\n                return;\n            }\n            this.ready = false;\n            this.unbind();\n            this.resetPreview();\n            this.cropper.parentNode.removeChild(this.cropper);\n            b.removeClass(this.element, a.CLASS_HIDDEN);\n        }\n        uncreate() {\n            if (this.ready) {\n                this.unbuild();\n                this.ready = false;\n                this.cropped = false;\n            } else if (this.sizing) {\n                this.sizingImage.onload = null;\n                this.sizing = false;\n                this.sized = false;\n            } else if (this.reloading) {\n                this.xhr.onabort = null;\n                this.xhr.abort();\n            } else if (this.image) {\n                this.stop();\n            }\n        }\n        static noConflict() {\n            window.Cropper = AnotherCropper;\n            return Cropper;\n        }\n        static setDefaults(options) {\n            b.assign(DEFAULTS, b.isPlainObject(options) && options);\n        }\n    }\n    b.assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n    return skylark.attach('intg.Cropper', Cropper);\n});"]}